# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;

#     server_name api.dummy.com;
#     client_max_body_size 0;

#     access_log /var/log/nginx/api.dummy.com.access.log;
#     error_log /var/log/nginx/api.dummy.com.error.log;

#     ssl_certificate /etc/letsencrypt/api.dummy.com/fullchain.pem;

#     ssl_certificate_key /etc/letsencrypt/api.dummy.com/privkey.pem;

#     include /etc/nginx/ssl/options-ssl-nginx.conf;

#     ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem;


#     location / {
#         proxy_set_header    Host                $http_host;
#         proxy_set_header    X-Forwarded-Host    $host:$server_port;
#         proxy_set_header    X-Forwarded-Server  $host;
#         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
#         proxy_set_header    X-Forwarded-Proto   $scheme;
#         proxy_set_header    X-Real-IP           $remote_addr;

#         # If your API service is running in a container, use the container's hostname
#         # For example:
#         # assuming your container has the following
#         # - hostname: service.api.dummy
#         # - listening on the port 8090
#         # - belongs to the same docker network that the Nginx container
#         # proxy_pass          http://service.api.dummy:8090;
#         # proxy_read_timeout  90;
#         # proxy_redirect      http://service.api.dummy:8090 https://api.dummy.com;
#         #
#         # Otherwise if it's running locally and listening on the port 8090
#         # proxy_pass          http://localhost:8090;
#         # proxy_read_timeout  90;
#         # proxy_redirect      http://localhost:8090 https://api.dummy.com;

#         proxy_http_version 1.1;
#         proxy_request_buffering off;
#     }
# }
