server {
    listen 80;
    listen [::]:80;

    # The www and non-www host server name.
    server_name dummy.com www.dummy.com;

    # Redirect to the non-www HTTPS version.
    return 301 https://dummy.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # The www host server name.
    server_name www.dummy.com;

    ssl_certificate /etc/letsencrypt/dummy.com/fullchain.pem;

    ssl_certificate_key /etc/letsencrypt/dummy.com/privkey.pem;

    include /etc/nginx/ssl/options-ssl-nginx.conf;

    ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem;

    # Redirect to the non-www HTTPS version.
    return 301 https://dummy.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # The non-www host server name.
    server_name dummy.com;

    # Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field. 
    # If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. 
    # Please be aware that browsers cannot correctly display this error. Setting size to 0 disables checking of client request body size.
    client_max_body_size 0;

    access_log /var/log/nginx/dummy.com.access.log;
    error_log /var/log/nginx/dummy.com.error.log;

    ssl_certificate /etc/letsencrypt/dummy.com/fullchain.pem;

    ssl_certificate_key /etc/letsencrypt/dummy.com/privkey.pem;

    include /etc/nginx/ssl/options-ssl-nginx.conf;

    ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem;

    # # example to serve HTML
    # location / {
    #     root /usr/share/nginx/html;
    #     index index.html;
    # }

    # redirect to service
    location / {

        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-Host    $host:$server_port;
        proxy_set_header    X-Forwarded-Server  $host;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    X-Real-IP           $remote_addr;

        # If your service is running in a container, use the container's hostname
        # For example:
	# assuming your container has the following
	# - hostname: service.dummy
	# - listening on the port 8080
	# - belongs to the same docker network that the Nginx container
        proxy_pass          http://service.dummy:8080;
        proxy_read_timeout  90;
        proxy_redirect      http://service.dummy:8080 https://dummy.com;
		
	# Otherwise if it's running locally and listening on the port 8080
	# proxy_pass          http://localhost:8080;
        # proxy_read_timeout  90;
        # proxy_redirect      http://localhost:8080 https://dummy.com;

        proxy_http_version 1.1;
        proxy_request_buffering off;
    }
}
